# 模板文件，未来可能有助于批量生成docker-compose文件，暂时保存
services:
  orderer:
    image: hyperledger/fabric-orderer:latest
    environment:
    # 此处开始，需要其他文件额外指定 ORDERER_MSP, PROJECT_NAME, ORDERER_ID
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=${ORDERER_MSP}
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../organizations/ordererOrganizations/${PROJECT_NAME}/orderers/${ORDERER_ID}/msp:/var/hyperledger/orderer/msp
      - ../organizations/ordererOrganizations/${PROJECT_NAME}/orderers/${ORDERER_ID}/tls/:/var/hyperledger/orderer/tls
      - ${ORDERER_ID}:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 9443:9443
    extra_hosts: &extra_hosts_common
    - "orderer1.dataexchange.com:10.2.2.11"
    - "orderer2.dataexchange.com:10.2.2.12"
    - "orderer3.dataexchange.com:10.2.2.13"
    - "orderer4.dataexchange.com:10.2.2.14"
    - "orderer5.dataexchange.com:10.2.2.15"
    - "orderer6.dataexchange.com:10.2.2.16"
    - "peer0.org1.dataexchange.com:10.2.2.11"
    - "peer0.org2.dataexchange.com:10.2.2.12"
    - "peer0.org3.dataexchange.com:10.2.2.13"
    - "peer0.org4.dataexchange.com:10.2.2.14"
    - "peer0.org5.dataexchange.com:10.2.2.15"
    - "peer0.org6.dataexchange.com:10.2.2.16"
  
  peer:
    image: hyperledger/fabric-peer:latest
    environment:
      # 此处开始，需要其他文件额外指定 PEER_MSP, PEER_ID, ORG_ID, NETWORK_NAME
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${NETWORK_NAME}
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=${PEER_ID}
      - CORE_PEER_ADDRESS=${PEER_ID}:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=${PEER_ID}:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=${PEER_ID}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEER_ID}:7051
      - CORE_PEER_LOCALMSPID=${PEER_MSP}
      - CORE_OPERATIONS_LISTENADDRESS=${PEER_ID}:9444
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/peerOrganizations/${ORG_ID}/peers/${PEER_ID}/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/${ORG_ID}/peers/${PEER_ID}/tls:/etc/hyperledger/fabric/tls
      - ${PEER_ID}:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
      - 9444:9444
    # 此处需要添加其他docker容器所在ip
    extra_hosts: *extra_hosts_common

  # 此cli只为orderer1 与peer0.org1工作,因此预先导入后续会用到的一些环境变量
  cli:
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
    # 此处需要引入变量：PEER_ID, PEER_MSP,ORG_ID,PROJECT_NAME,ORDERER_ID
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      # 此cli为peer0 org1 专用，因此导入一些必要的环境变量
      - ORDERER_ADDRESS=${PEER_ID}
      - ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/${PROJECT_NAME}/orderers/${ORDERER_ID}/msp/tlscacerts/tlsca.dataexchange.com-cert.pem
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=${PEER_ID}:7051
      - CORE_PEER_LOCALMSPID=${PEER_MSP}
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/${ORG_ID}/peers/${PEER_ID}/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/${ORG_ID}/peers/${PEER_ID}/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/${ORG_ID}/peers/${PEER_ID}/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/${ORG_ID}/users/Admin@org1.${PROJECT_NAME}/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      # 导入通道信息
      - ../channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      # 导入证书
      - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      # 导入脚本
      - ../remote-scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/remote-scripts
      - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
      # 导入链码
      - ../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
    # 此处需要添加其他docker容器所在ip
    extra_hosts: *extra_hosts_common

